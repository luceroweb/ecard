{"version":3,"sources":["images/coffee_and_slippers.webp","Components/GreetingCard.js","Components/CustomizeMessage.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingCard","email","greeting","body","closing","setCustomize","preview","setPreview","className","src","coffee_and_slippers","alt","onClick","mailto","url","encodeURIComponent","window","open","CustomizeMessage","setEmail","setGreeting","setBody","setClosing","htmlFor","name","id","type","value","onChange","event","target","placeholder","rows","preventDefault","App","query","URLSearchParams","location","search","useState","get","importedGreeting","setImportedGreeting","importedBody","setImportedBody","importedClosing","setImportedClosing","customize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b489bdb6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/coffee_and_slippers.9afc32bd.webp\";","import coffee_and_slippers from '../images/coffee_and_slippers.webp';\nimport '../App.css';\n\nfunction GreetingCard({ email, greeting, body, closing, setCustomize, preview, setPreview }) {\n\n  const continueEditing = () => {\n    setCustomize(true);\n    setPreview(false);\n  }\n\n  const sendEcard = () => {\n    let mailto = `mailto:${email}`;\n    mailto += '?subject=E-Card';\n    mailto += '&body=You have received an e-greeting card.';\n    mailto += '%0D%0A%0D%0A';\n    mailto += 'Go To Greeting Card';\n    mailto += '%0D%0A';\n\n    let url = 'https://luceroweb.github.io/ecard';\n    url += `?greeting=${encodeURIComponent(greeting)}`;\n    url += `&body=${encodeURIComponent(body)}`;\n    url += `&closing=${encodeURIComponent(closing)}`;\n\n    mailto += encodeURIComponent(url);\n\n    window.open(mailto);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={coffee_and_slippers} className=\"App-logo\" alt=\"coffee and slippers\" />\n        <p className=\"script\">\n          {greeting}\n        </p>\n        <p className=\"script\">{body}</p>\n        <p className=\"script\">{closing}</p>\n        {preview\n          ? <div className=\"buttons\">\n            <button onClick={continueEditing}>\n              Continue Editing\n            </button>\n            <button onClick={sendEcard}>Send</button>\n          </div>\n          : <button\n          onClick={() => setCustomize(true)}\n          >\n            Reshare This Card\n          </button>\n        }\n      </header>\n    </div>\n  );\n}\n\nexport default GreetingCard;\n","import coffee_and_slippers from '../images/coffee_and_slippers.webp';\n\nexport default function CustomizeMessage({ email, setEmail, greeting, setGreeting, body, setBody, closing, setClosing, setPreview, setCustomize }) {\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    setPreview(true);\n    setCustomize(false);\n  }\n\n  return(\n    <div className=\"customize\">\n      <div className=\"instructions\">\n        <img src={coffee_and_slippers} alt=\"coffee and slippers\" className=\"thumb\" />\n        <p><strong>How to Reshare:</strong><br />\n        Write your own custom message below.</p>\n      </div>\n      <form>\n\n        <div>\n          <label htmlFor=\"email\">Recipient Email</label>\n          <input\n            name=\"email\"\n            id=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            placeholder=\"Recipient Email\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"greeting\">Greeting</label>\n          <input\n            name=\"greeting\"\n            id=\"greeting\"\n            type=\"text\"\n            value={greeting}\n            onChange={(event) => setGreeting(event.target.value)}\n            placeholder=\"Greeting\"\n          />\n        </div>\n\n        <div>\n          <label htmlFor=\"body\">Body</label>\n          <textarea\n            name=\"body\"\n            id=\"body\"\n            value={body}\n            onChange={event => setBody(event.target.value)}\n            placeholder=\"Body\"\n            rows=\"3\"\n          >\n          </textarea>\n        </div>\n\n        <div>\n          <label htmlFor=\"closing\">Closing</label>\n          <input\n            name=\"closing\"\n            id=\"closing\"\n            type=\"text\"\n            value={closing}\n            onChange={event => setClosing(event.target.value)}\n            placeholder=\"Closing\"\n          />\n        </div>\n\n        <button type=\"submit\" onClick={onSubmit}>Preview Greeting Card</button>\n\n      </form>\n    </div>\n  )\n}","import './App.css';\nimport GreetingCard from './Components/GreetingCard';\nimport CustomizeMessage from './Components/CustomizeMessage';\nimport { useState } from 'react';\n\nfunction App() {\n  const query = new URLSearchParams(window.location.search);\n  const [email, setEmail] = useState('');\n  const [importedGreeting, setImportedGreeting] = useState(query.get(\"greeting\") || 'Dear Mom,');\n  const [importedBody, setImportedBody] = useState(query.get(\"body\") || 'Have a comforting and joyous holiday!');\n  const [importedClosing, setImportedClosing] = useState(query.get(\"closing\") || 'Love, your son Juan');\n  const [customize, setCustomize] = useState(false);\n  const [preview, setPreview] = useState(false);\n\n  return (\n    <>\n    {customize\n      ? <CustomizeMessage\n        email={email}\n        setEmail={setEmail}\n        greeting={importedGreeting}\n        setGreeting={setImportedGreeting}\n        body={importedBody}\n        setBody={setImportedBody}\n        closing={importedClosing}\n        setClosing={setImportedClosing}\n        setPreview={setPreview}\n        setCustomize={setCustomize}\n      />\n      : <GreetingCard\n        email={email}\n        greeting={importedGreeting}\n        body={importedBody}\n        closing={importedClosing}\n        setCustomize={setCustomize}\n        preview={preview}\n        setPreview={setPreview}\n      />\n    }\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}